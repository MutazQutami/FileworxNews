// <auto-generated />
using System;
using FileworxNewsBusiness;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FileworxNewsBusiness.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FileworxNewsBusiness.FileWorxEntity", b =>
                {
                    b.Property<Guid>("GuidValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("GuidValue");

                    b.ToTable("Entities");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("FileworxNewsBusiness.AppUser", b =>
                {
                    b.HasBaseType("FileworxNewsBusiness.FileWorxEntity");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastModifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LogInName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("LastModifier");

                    b.HasIndex("LogInName")
                        .IsUnique()
                        .HasFilter("[LogInName] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FileworxNewsBusiness.Content", b =>
                {
                    b.HasBaseType("FileworxNewsBusiness.FileWorxEntity");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CreatorId");

                    b.HasIndex("LastModifierId");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("FileworxNewsBusiness.News", b =>
                {
                    b.HasBaseType("FileworxNewsBusiness.Content");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("News");
                });

            modelBuilder.Entity("FileworxNewsBusiness.Photo", b =>
                {
                    b.HasBaseType("FileworxNewsBusiness.Content");

                    b.Property<string>("PhotoName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("FileworxNewsBusiness.AppUser", b =>
                {
                    b.HasOne("FileworxNewsBusiness.FileWorxEntity", null)
                        .WithOne()
                        .HasForeignKey("FileworxNewsBusiness.AppUser", "GuidValue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileworxNewsBusiness.Content", b =>
                {
                    b.HasOne("FileworxNewsBusiness.FileWorxEntity", null)
                        .WithOne()
                        .HasForeignKey("FileworxNewsBusiness.Content", "GuidValue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileworxNewsBusiness.News", b =>
                {
                    b.HasOne("FileworxNewsBusiness.Content", null)
                        .WithOne()
                        .HasForeignKey("FileworxNewsBusiness.News", "GuidValue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileworxNewsBusiness.Photo", b =>
                {
                    b.HasOne("FileworxNewsBusiness.Content", null)
                        .WithOne()
                        .HasForeignKey("FileworxNewsBusiness.Photo", "GuidValue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
